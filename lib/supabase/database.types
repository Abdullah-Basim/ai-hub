// This file contains TypeScript types for your Supabase database
// Generated by Supabase CLI
// You can generate this file by running: npx supabase gen types typescript --project-id YOUR_PROJECT_ID

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      users: {
        Row: {
          id: string
          email: string
          name: string | null
          avatar_url: string | null
          created_at: string
          updated_at: string
          plan: string
          credits: number
        }
        Insert: {
          id?: string
          email: string
          name?: string | null
          avatar_url?: string | null
          created_at?: string
          updated_at?: string
          plan?: string
          credits?: number
        }
        Update: {
          id?: string
          email?: string
          name?: string | null
          avatar_url?: string | null
          created_at?: string
          updated_at?: string
          plan?: string
          credits?: number
        }
        Relationships: []
      }
      files: {
        Row: {
          id: string
          user_id: string
          name: string
          key: string
          url: string | null
          size: number
          type: string
          status: string
          created_at: string
          updated_at: string
          expires_at: string | null
        }
        Insert: {
          id?: string
          user_id: string
          name: string
          key: string
          url?: string | null
          size: number
          type: string
          status?: string
          created_at?: string
          updated_at?: string
          expires_at?: string | null
        }
        Update: {
          id?: string
          user_id?: string
          name?: string
          key?: string
          url?: string | null
          size?: number
          type?: string
          status?: string
          created_at?: string
          updated_at?: string
          expires_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "files_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      api_keys: {
        Row: {
          id: string
          user_id: string
          name: string
          key: string
          permissions: string[]
          is_active: boolean
          created_at: string
          updated_at: string
          expires_at: string | null
        }
        Insert: {
          id?: string
          user_id: string
          name: string
          key: string
          permissions?: string[]
          is_active?: boolean
          created_at?: string
          updated_at?: string
          expires_at?: string | null
        }
        Update: {
          id?: string
          user_id?: string
          name?: string
          key?: string
          permissions?: string[]
          is_active?: boolean
          created_at?: string
          updated_at?: string
          expires_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "api_keys_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      usage_records: {
        Row: {
          id: string
          user_id: string
          api_key_id: string | null
          service: string
          operation: string
          resource_id: string | null
          units: number
          cost: number
          status_code: number | null
          timestamp: string
        }
        Insert: {
          id?: string
          user_id: string
          api_key_id?: string | null
          service: string
          operation: string
          resource_id?: string | null
          units?: number
          cost?: number
          status_code?: number | null
          timestamp?: string
        }
        Update: {
          id?: string
          user_id?: string
          api_key_id?: string | null
          service?: string
          operation?: string
          resource_id?: string | null
          units?: number
          cost?: number
          status_code?: number | null
          timestamp?: string
        }
        Relationships: [
          {
            foreignKeyName: "usage_records_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "usage_records_api_key_id_fkey"
            columns: ["api_key_id"]
            referencedRelation: "api_keys"
            referencedColumns: ["id"]
          }
        ]
      }
      models: {
        Row: {
          id: string
          name: string
          description: string
          type: string
          tier: string
          provider: string
          model_id: string
          api_config: Json | null
          is_active: boolean
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          name: string
          description: string
          type: string
          tier: string
          provider: string
          model_id: string
          api_config: Json | null
          is_active: boolean
          created_at: string
          updated_at: string
        }
        Update: {
          id?: string
          name: string
          description: string
          type: string
          tier: string
          provider: string
          model_id: string
          api_config: Json | null
          is_active: boolean
          created_at: string
          updated_at: string
        }
        Relationships: []
      }
      prompts: {
        Row: {
          id: string
          user_id: string
          model_id: string
          input: string
          output: string | null
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          model_id: string
          input: string
          output: string | null
          created_at: string
        }
        Update: {
          id?: string
          user_id: string
          model_id: string
          input: string
          output: string | null
          created_at: string
        }
        Relationships: [
          {
            foreignKeyName: "prompts_model_id_fkey"
            columns: ["model_id"]
            referencedRelation: "models"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "prompts_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      model_usage: {
        Row: {
          id: string
          user_id: string
          model_id: string
          count: number
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          model_id: string
          count: number
          created_at: string
          updated_at: string
        }
        Update: {
          id?: string
          user_id: string
          model_id: string
          count: number
          created_at: string
          updated_at: string
        }
        Relationships: [
          {
            foreignKeyName: "model_usage_model_id_fkey"
            columns: ["model_id"]
            referencedRelation: "models"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "model_usage_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      transactions: {
        Row: {
          id: string
          user_id: string
          type: string
          amount: number
          status: string
          stripe_id: string | null
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          type: string
          amount: number
          status: string
          stripe_id: string | null
          created_at: string
        }
        Update: {
          id?: string
          user_id: string
          type: string
          amount: number
          status: string
          stripe_id: string | null
          created_at: string
        }
        Relationships: [
          {
            foreignKeyName: "transactions_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
    }
    Views: {}
    Functions: {}
    Enums: {}
  }
}
